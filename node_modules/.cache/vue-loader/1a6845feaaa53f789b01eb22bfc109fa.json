{"remainingRequest":"/Users/chris/Documents/web/vue/calculator/node_modules/vue-loader-v16/dist/index.js??ref--1-1!/Users/chris/Documents/web/vue/calculator/src/components/HelloWorld.vue?vue&type=style&index=0&id=469af010&scoped=true&lang=css","dependencies":[{"path":"/Users/chris/Documents/web/vue/calculator/src/components/HelloWorld.vue","mtime":1642104522657},{"path":"/Users/chris/Documents/web/vue/calculator/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/web/vue/calculator/node_modules/vue-loader-v16/dist/stylePostLoader.js","mtime":499162500000},{"path":"/Users/chris/Documents/web/vue/calculator/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/chris/Documents/web/vue/calculator/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/chris/Documents/web/vue/calculator/node_modules/vue-loader-v16/dist/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CmgxIHsKICBjb2xvcjogZ3JheTsKICBmb250LXNpemU6IDQ4cHg7CiAgdGV4dC1hbGlnbjogY2VudGVyOwp9Cg=="},{"version":3,"sources":["/Users/chris/Documents/web/vue/calculator/src/components/HelloWorld.vue"],"names":[],"mappings":";AAsDA,CAAC,EAAE;EACD,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACX,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;EACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACpB","file":"/Users/chris/Documents/web/vue/calculator/src/components/HelloWorld.vue","sourceRoot":"","sourcesContent":["\n<template>\n  <div id=\"calculated\" class=\"calculator\">\n    <h1>CALCULATED</h1>\n    <p>{{ mathProblemDisplay }}</p>\n    <button @click=\"generateRandomMathProblem\">Generate Number</button>\n  </div>\n</template>\n\n<script>\nexport default {\n  name: 'Calculator',\n  data: function() {\n    return {\n      mathProblemDisplay: '',\n      linearMathEquation: {\n        y: 0,\n        m: 0,\n        b: 0\n      }\n    }\n  },\n  methods: {\n    generateRandomMathProblem() {\n      this.linearMathEquation = this.generateLinearEquation()\n      this.mathProblemDisplay = this.convertEquationObjectToString(this.linearMathEquation, 'linear');\n    },\n    generateLinearEquation() {\n      let linearEquation = {\n        y: 0,\n        m: 0,\n        b: 0\n      }\n      for (const c in linearEquation) {\n        const constant = Math.floor(Math.random() * 51);\n        linearEquation[c] = constant;\n      }\n      return linearEquation;\n    },\n    convertEquationObjectToString(equationObject, type) {\n      if (type === 'linear') {\n        return equationObject[y] + ' = ' + equationObject[m] + 'X + ' + equationObject[b];\n      }\n      return '';\n    }\n  },\n  props: {\n    msg: String\n  }\n}\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh1 {\n  color: gray;\n  font-size: 48px;\n  text-align: center;\n}\n</style>\n"]}]}